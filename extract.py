# -*- coding: utf-8 -*-
"""extract.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iShVfJRTQdgJ7hdWHay2bWTbM1rtrL-l
"""

# Mengimport Library untuk Ekstraksi Data dan Memasukkan Syntax untuk Ekstraksi Data dari Website
import requests
import pandas as pd
import time
import datetime
from bs4 import BeautifulSoup

HEADERS = {
    "User-Agent": (
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
        "(KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36"
    )
}

URL_BASE = "https://fashion-studio.dicoding.dev/"
PAGES_MAX = 50
DATA_TARGET = 1000

def scrape_page(url: str) -> list:
    try:
      response = requests.get(url, headers=HEADERS)
      response.raise_for_status()
    except requests.exceptions.RequestException as e:
      print(f"Terjadi kesalahan ketika mengekstrak data terhadap {url}: {e}")
      return []

    soup = BeautifulSoup(response.text, "html.parser")
    products = []

    for product in soup.find_all("div", class_="collection-card"):
      element_title = product.find("h3", class_="product-title")
      title = element_title.text.strip() if element_title else "Unknown Product"

      element_price = product.find("span", class_="price")
      price = element_price.text.strip().replace("$", "") if element_price else "Price Unavailable"

      element_rating = product.find("p", string=lambda text: text and "Rating" in text)
      rating = element_rating.text.replace("Rating:", "").replace("‚≠ê", "").strip() if element_rating else "Invalid Rating"

      element_colors = product.find("p", string=lambda text: text and "Colors" in text)
      colors = element_colors.text.replace("Colors:", "").strip().split()[0] if element_colors else "Colors Unavailable"

      element_size = product.find("p", string=lambda text: text and "Size" in text)
      size = element_size.text.replace("Size:", "").strip() if element_size else "Size Unavailable"

      element_gender = product.find("p", string=lambda text: text and "Gender" in text)
      gender = element_gender.text.replace("Gender:", "").strip() if element_gender else "Gender Unavailable"

      timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

      products.append({
          "Title": title,
          "Price": price,
          "Rating": rating,
          "Colors": colors,
          "Size": size,
          "Gender": gender,
          "Timestamp": timestamp
      })

    return products

def scrape_main():
  all_products = []
  for page in range(1, 51):
    try:
      if page ==1:
        url = URL_BASE
      else:
        url = f"{URL_BASE}page{page}"
      print(f"Scraping URL halaman: {url}")
      products_page = scrape_page(url)
      print(f"Scraped {len(products_page)} products on page {page}")
      all_products.extend(products_page)
      time.sleep(1)
    except Exception as e:
      print(f"Error scraping data pada halaman {page}: {e}")
  print(f"\nTotal data yang discraping sebanyak: {len(all_products)}")
  return all_products

# Mengekstraksi Data dari Website
data = scrape_main()

# Menampilkan Data Hasil Scraping
print(data)