# -*- coding: utf-8 -*-
"""transform.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v1UGjwWsTtdgrWWDcJdRwBBXgT83jXBQ
"""

# Import Library untuk Transformasi
import pandas as pd
import re

rate_exchange = 16000

def transform_data(data):
  if not data:
    return pd.DataFrame()

  df = pd.DataFrame(data)

  df_transformed = df.copy() #bekerja pada salinan DataFrame
  try:
    # Menghapus Baris dengan Invalid Data pada Kolom "Rating", "Title", dan "Price"
    df_transformed = df_transformed[df_transformed["Rating"] != "Invalid Rating"]
    df_transformed = df_transformed[df_transformed["Title"] != "Unknown Product"]
    # Menggunakan errors="coerce" saat Mengonversi ke Numerik akan Membuat Nilai Non-Numerik menjadi NaN lalu baru Menghapus Baris dengan NaN di Kolom Price
    df_transformed["Price"] = pd.to_numeric(df_transformed["Price"].astype(str).str.replace("$", "", regex=False), errors="coerce")
    df_transformed = df_transformed.dropna(subset=["Price"])

    # Mengonversi Kolom "Price" menjadi Rupiah
    df_transformed["Price"] = df_transformed["Price"] * rate_exchange

    # Mengubah Kolom "Colors" Hanya Berisikan Angka tanpa "3 Colors"
    df_transformed["Colors"] = df_transformed["Colors"].astype(str).str.extract(r"(\d+)", expand=False).fillna("0").astype(int)

    # Mengubah Kolom "Rating" Berbentuk float tanpa "Invalid Rating" ataupun "4.8/5"
    df_transformed["Rating"] = df_transformed["Rating"].astype(str).str.extract(r"([\d.]+)", expand=False).astype(float)

    # Mengubah Kolom "Size" Berbentuk string dan Berisikan Ukuran Pakaian Saja
    df_transformed["Size"] = df_transformed["Size"].astype(str).str.replace("Size:", "", regex=False).str.strip()

    # Mengubah Kolom "Gender" Berbentuk string dan Berisikan Ukuran Pakaian Saja
    df_transformed["Gender"] = df_transformed["Gender"].astype(str).str.replace("Gender:", "", regex=False).str.strip()

    # Mengubah Tipe Kolom "Timestamp" menjadi Datetime
    if "Timestamp" in df_transformed.columns:
      df_transformed["Timestamp"] = pd.to_datetime(df_transformed["Timestamp"])
    else:
      print("Kolom 'Timestamp' tidak ditemukan sehingga transformasi dilewati")

    # Menghapus Nilai Redundan
    df_transformed = df_transformed.drop_duplicates()

    return df_transformed

  except Exception as e:
    print(f"Terjadi kesalahan saat melakukan transformasi: {e}")
    return pd.DataFrame()
    df_transformed = df_transformed.drop_duplicates()

    return df_transformed

  except Exception as e:
    print(f"Terjadi kesalahan saat melakukan transformasi: {e}")
    return pd.DataFrame()